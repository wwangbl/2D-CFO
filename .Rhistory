} else if (DCR == -1){
cidx.A <- -1
}
} else if (idx.chg.A == -1 & idx.chg.B == 1){
# message('rare case occurs')
LCU <- make.decision.1dCFO.fn(phi, c(cys[2,1],cys[2,2],cys[3,2]), c(cns[2,1],cns[2,2],cns[3,2]), alp.prior,
bet.prior, c(cover.doses[2,1],cover.doses[2,2],cover.doses[3,2])) - 2
if (LCU == 1){
cidx.A <- 1
} else if (LCU == -1){
cidx.B <- -1
}
} else if (idx.chg.A == 1 & idx.chg.B == 0){
cidx.B <- 1
} else if (idx.chg.A == 0 & idx.chg.B == 1){
cidx.A <- 1
} else if (idx.chg.A == -1 & idx.chg.B == 0){
cidx.B <- -1
} else if (idx.chg.A == 0 & idx.chg.B == -1){
cidx.A <- -1
}
return (c(cidx.A, cidx.B))
}
source("C:/Users/User/Desktop/2D-CFO/2D_CFO_MTD.R", echo=TRUE)
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.1, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
n.patient <- n.patient + res$dose.ns[3,2] + res$dose.ns[2,3] + res$dose.ns[1,4]
n.DLT <- n.DLT + sum(res$DLT.ns)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.1[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
cat('scenario 1', '\n')
cat('MTD selection rate: ', n.MTD/1000, '\n')
cat('% of patients at the MTD: ', n.patient/(1000*60), '\n')
cat('average number of DLTs: ', n.DLT/1000)
make.decision.2dCFO.fn <- function(phi, cys, cns, alp.prior, bet.prior, cover.doses, diag=FALSE){
cidx.A <- 0
cidx.B <- 0
# horizontal direction
# message(paste('cys[2,]: ', cys[2,]))
# message(paste('cns[2,]: ', cns[2,]))
idx.chg.A <- make.decision.1dCFO.fn(phi, cys[2,], cns[2,], alp.prior, bet.prior, cover.doses[2,]) - 2
# message(paste('decision A: ',idx.chg.A))
# vertical direction
# message(paste('cys[,2]: ', cys[,2]))
# message(paste('cns[,2]: ', cns[,2]))
# message(paste('alp, bet: ', alp.prior, bet.prior))
# message(paste('cover.doses: ',cover.doses[,2]))
idx.chg.B <- make.decision.1dCFO.fn(phi, cys[,2], cns[,2], alp.prior, bet.prior, cover.doses[,2]) - 2
# message(paste('decision B: ',idx.chg.B))
if (idx.chg.A == 1 & idx.chg.B == 1){
### horizontal and vertical only
OR.R <- OR.values(phi, cys[2,2], cns[2,2], cys[2,3], cns[2,3], alp.prior, bet.prior, type="R")
OR.U <- OR.values(phi, cys[2,2], cns[2,2], cys[3,2], cns[3,2], alp.prior, bet.prior, type="R")
# message(paste('OR.R: ',OR.R))
# message(paste('OR.U: ',OR.U))
if (OR.R == OR.U){
rand <- rbinom(1,1,0.5)
if(rand == 0){
cidx.A <- 1
} else {
cidx.B <- 1
}
} else if (OR.R > OR.U){
cidx.B <- 1
} else {
cidx.A <- 1
}
### diagonal direction
# cidx.A <- idx.chg.A
# cidx.B <- idx.chg.B
} else if (idx.chg.A == -1 & idx.chg.B == -1){
if (is.na(cys[2,1]) & is.na(cys[1,2])){
cidx.A <- 0
cidx.B <- 0
} else if (is.na(cys[2,1])){
cidx.A <- -1
} else if (is.na(cys[1,2])){
cidx.B <- -1
} else {
OR.L <- OR.values(phi, cys[2,2], cns[2,2], cys[2,1], cns[2,1], alp.prior, bet.prior, type="L")
OR.D <- OR.values(phi, cys[2,2], cns[2,2], cys[1,2], cns[1,2], alp.prior, bet.prior, type="L")
if (OR.L == OR.D){
rand <- rbinom(1,1,0.5)
if(rand == 0){
cidx.A <- -1
} else {
cidx.B <- -1
}
} else if (OR.L > OR.D){
cidx.B <- -1
} else {
cidx.A <- -1
}
}
} else if (idx.chg.A == 1 & idx.chg.B == -1){
# message('rare case occurs')
DCR <- make.decision.1dCFO.fn(phi, c(cys[1,2],cys[2,2],cys[2,3]), c(cns[1,2],cns[2,2],cns[2,3]), alp.prior,
bet.prior, c(cover.doses[1,2],cover.doses[2,2],cover.doses[2,3])) - 2
if (DCR == 1){
cidx.B <- 1
} else if (DCR == -1){
cidx.A <- -1
}
} else if (idx.chg.A == -1 & idx.chg.B == 1){
# message('rare case occurs')
LCU <- make.decision.1dCFO.fn(phi, c(cys[2,1],cys[2,2],cys[3,2]), c(cns[2,1],cns[2,2],cns[3,2]), alp.prior,
bet.prior, c(cover.doses[2,1],cover.doses[2,2],cover.doses[3,2])) - 2
if (LCU == 1){
cidx.A <- 1
} else if (LCU == -1){
cidx.B <- -1
}
} else if (idx.chg.A == 1 & idx.chg.B == 0){
cidx.B <- 1
} else if (idx.chg.A == 0 & idx.chg.B == 1){
cidx.A <- 1
} else if (idx.chg.A == -1 & idx.chg.B == 0){
cidx.B <- -1
} else if (idx.chg.A == 0 & idx.chg.B == -1){
cidx.A <- -1
}
return (c(cidx.A, cidx.B))
}
source("C:/Users/User/Desktop/2D-CFO/2D_CFO_MTD.R", echo=TRUE)
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.1, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
n.patient <- n.patient + res$dose.ns[3,2] + res$dose.ns[2,3] + res$dose.ns[1,4]
n.DLT <- n.DLT + sum(res$DLT.ns)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.1[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
cat('scenario 1', '\n')
cat('MTD selection rate: ', n.MTD/1000, '\n')
cat('% of patients at the MTD: ', n.patient/(1000*60), '\n')
cat('average number of DLTs: ', n.DLT/1000)
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.2, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
n.patient <- n.patient + res$dose.ns[1,2] + res$dose.ns[2,1]
n.DLT <- n.DLT + sum(res$DLT.ns)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.2[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
cat('scenario 2', '\n')
cat('MTD selection rate: ', n.MTD/1000, '\n')
cat('number of patients at the MTD: ', n.patient/(1000*60), '\n')
cat('average number of DLTs: ', n.DLT/1000)
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.3, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
n.patient <- n.patient + res$dose.ns[3,3] + res$dose.ns[2,4] + res$dose.ns[1,5]
n.DLT <- n.DLT + sum(res$DLT.ns)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.3[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
cat('scenario 3', '\n')
cat('MTD selection rate: ', n.MTD/1000, '\n')
cat('number of patients at the MTD: ', n.patient/(1000*60), '\n')
cat('average number of DLTs: ', n.DLT/1000)
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.5, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.5[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
cat('scenario 5', '\n')
cat('MTD selection rate: ', n.MTD/1000, '\n')
cat('number of patients at the MTD: ', n.patient/(1000*60), '\n')
cat('average number of DLTs: ', n.DLT/1000)
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.6, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
n.patient <- n.patient + res$dose.ns[3,2] + res$dose.ns[2,4]
n.DLT <- n.DLT + sum(res$DLT.ns)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.6[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
cat('scenario 6', '\n')
cat('MTD selection rate: ', n.MTD/1000, '\n')
cat('number of patients at the MTD: ', n.patient/(1000*60), '\n')
cat('average number of DLTs: ', n.DLT/1000)
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.7, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
n.patient <- n.patient + res$dose.ns[3,1] + res$dose.ns[2,2] + res$dose.ns[1,5]
n.DLT <- n.DLT + sum(res$DLT.ns)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.7[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
cat('scenario 7', '\n')
cat('MTD selection rate: ', n.MTD/1000, '\n')
cat('number of patients at the MTD: ', n.patient/(1000*60), '\n')
cat('average number of DLTs: ', n.DLT/1000)
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.8, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
n.patient <- n.patient + res$dose.ns[2,3]
n.DLT <- n.DLT + sum(res$DLT.ns)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.8[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
cat('scenario 8', '\n')
cat('MTD selection rate: ', n.MTD/1000, '\n')
cat('number of patients at the MTD: ', n.patient/(1000*60), '\n')
cat('average number of DLTs: ', n.DLT/1000)
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.9, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
n.patient <- n.patient + res$dose.ns[3,2]
n.DLT <- n.DLT + sum(res$DLT.ns)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.9[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
cat('scenario 9', '\n')
cat('MTD selection rate: ', n.MTD/1000, '\n')
cat('number of patients at the MTD: ', n.patient/(1000*60), '\n')
cat('average number of DLTs: ', n.DLT/1000)
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.10, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
n.patient <- n.patient + res$dose.ns[1,4]
n.DLT <- n.DLT + sum(res$DLT.ns)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.10[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
cat('scenario 10', '\n')
cat('MTD selection rate: ', n.MTD/1000, '\n')
cat('number of patients at the MTD: ', n.patient/(1000*60), '\n')
cat('average number of DLTs: ', n.DLT/1000)
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.4, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
n.patient <- n.patient + res$dose.ns[1,1]
n.DLT <- n.DLT + sum(res$DLT.ns)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.4[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
select.mtd.comb <- function (target, npts, ntox, cutoff.eli = 0.95, extrasafe = FALSE,
offset = 0.05, boundMTD=FALSE, p.tox=1.4*target,mtd.contour = FALSE)
{
lambda_d = log((1 - target)/(1 - p.tox))/log(p.tox * (1 -target)/(target * (1 - p.tox)))
y = ntox
n = npts
if (nrow(n) > ncol(n) | nrow(y) > ncol(y)) {
stop("npts and ntox should be arranged in a way (i.e., rotated) such that for each of them, the number of rows is less than or equal to the number of columns.")
}
elimi = matrix(0, dim(n)[1], dim(n)[2])
if (extrasafe) {
if (n[1, 1] >= 3) {
if (1 - pbeta(target, y[1, 1] + 1, n[1, 1] - y[1,
1] + 1) > cutoff.eli - offset) {
elimi[, ] = 1
}
}
}
for (i in 1:dim(n)[1]) {
for (j in 1:dim(n)[2]) {
if (n[i, j] >= 3) {
if (1 - pbeta(target, y[i, j] + 1, n[i, j] -
y[i, j] + 1) > cutoff.eli) {
elimi[i:dim(n)[1], j] = 1
elimi[i, j:dim(n)[2]] = 1
break
}
}
}
}
selectdose=NULL
if (elimi[1] == 1) {
selectdose = c(99, 99)
selectdoses = matrix(selectdose, nrow = 1)
}else {
phat = (y + 0.05)/(n + 0.1)
phat = round(Iso::biviso(phat, n + 0.1, warn = TRUE)[, ],2)
# phat.out = phat
lower.mat=qbeta(0.025,y+0.05,n-y+0.05)
lower.mat=round(Iso::biviso(lower.mat),2)
upper.mat=qbeta(0.975,y+0.05,n-y+0.05)
upper.mat=round(Iso::biviso(upper.mat),2)
phat.out<-matrix(paste0(format(phat,digits=1),"(",lower.mat,", ",upper.mat,")"),byrow=FALSE,nrow=dim(phat)[1])
colnames(phat.out)=paste0("B",1:dim(n)[2])
rownames(phat.out)=paste0("A",1:dim(n)[1])
phat.out.noCI=round(phat,2)
phat.out[n == 0] = "NA"
phat[elimi == 1] = 1.1
phat = phat * (n != 0) + (1e-05) * (matrix(rep(1:dim(n)[1],
each = dim(n)[2], len = length(n)), dim(n)[1], byrow = T) +
matrix(rep(1:dim(n)[2], each = dim(n)[1], len = length(n)),
dim(n)[1]))
if(boundMTD){
if(all(phat[n!=0]>lambda_d)){
selectdose = c(99, 99)
selectdoses = matrix(selectdose, nrow = 1)
}else{
phat[phat>lambda_d]=10}}
if(is.null(selectdose)){
phat[n == 0] = 10
selectdose = which(abs(phat - target) == min(abs(phat -
target)), arr.ind = TRUE)
if (length(selectdose) > 2)
selectdose = selectdose[1, ]
aa = function(x) as.numeric(as.character(x))
if (mtd.contour == TRUE) {
selectdoses = cbind(row = 1:dim(n)[1], col = rep(99,
dim(n)[1]))
for (k in dim(n)[1]:1) {
kn = n[k, ]
ky = y[k, ]
kelimi = elimi[k, ]
kphat = phat[k, ]
if (kelimi[1] == 1 || sum(n[kelimi == 0]) ==
0) {
kseldose = 99
}else {
adm.set = (kn != 0) & (kelimi == 0)
adm.index = which(adm.set == T)
y.adm = ky[adm.set]
n.adm = kn[adm.set]
selectd = sort(abs(kphat[adm.set] - target),
index.return = T)$ix[1]
kseldose = adm.index[selectd]
}
selectdoses[k, 2] = ifelse(is.na(kseldose), 99,
kseldose)
if (k < dim(n)[1])
if (selectdoses[k + 1, 2] == dim(n)[2])
selectdoses[k, 2] = dim(n)[2]
if (k < dim(n)[1])
if (aa(selectdoses[k + 1, 2]) == dim(n)[2] &
aa(selectdoses[k + 1, 2]) == aa(selectdoses[k,
2]))
selectdoses[k, 2] = 99
}
}else {
selectdoses = matrix(99, nrow = 1, ncol = 2)
selectdoses[1, ] = matrix(selectdose, nrow = 1)
}
selectdoses = matrix(selectdoses[selectdoses[, 2] !=
99, ], ncol = 2)
}
colnames(selectdoses) = c("DoseA", "DoseB")
}
if (mtd.contour == FALSE) {
if (selectdoses[1, 1] == 99 && selectdoses[1, 2] == 99) {
cat("All tested doses are overly toxic. No MTD is selected! \n")
out=list(target = target, MTD = 99, p_est = matrix(NA,nrow = dim(npts)[1], ncol = dim(npts)[2]))
}
else {
out=list(target = target, MTD = selectdoses, p_est=phat.out.noCI,p_est_CI = phat.out)
}
class(out)<-"boin"
return(out)
}
else {
if (length(selectdoses) == 0) {
cat("All tested doses are overly toxic. No MTD is selected! \n")
out=list(target = target, MTD = 99, p_est = matrix(NA,nrow = dim(npts)[1], ncol = dim(npts)[2]))
}
else {
out=list(target = target, MTD = selectdoses,  p_est=phat.out.noCI,p_est_CI = phat.out)
}
class(out)<-"boin"
return(out)
}
}
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.4, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
n.patient <- n.patient + res$dose.ns[1,1]
n.DLT <- n.DLT + sum(res$DLT.ns)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.4[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
cat('scenario 4', '\n')
cat('MTD selection rate: ', n.MTD/1000, '\n')
cat('number of patients at the MTD: ', n.patient/(1000*60), '\n')
cat('average number of DLTs: ', n.DLT/1000)
n.MTD <- 0
n.patient <- 0
n.DLT <- 0
for (i in 1:1000){
res <- CFO.simu.fn(target, p.true.5, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args)
n.patient <- n.patient + res$dose.ns[3,5]
n.DLT <- n.DLT + sum(res$DLT.ns)
if (res$MTD[1]==99 | res$MTD[2]==99){
next
}
if (p.true.5[res$MTD[1],res$MTD[2]] == target){
n.MTD <- n.MTD + 1
}
if (i%%100==0){
message(i)
}
}
cat('scenario 5', '\n')
cat('MTD selection rate: ', n.MTD/1000, '\n')
cat('number of patients at the MTD: ', n.patient/(1000*60), '\n')
cat('average number of DLTs: ', n.DLT/1000)
0.657+0.704+0.698+0.616+0.668+0.542+0.663+0.404+0.368+0.417
0.4234+0.55055+0.414+0.5858+0.3978+0.3119+0.4241+0.2097+0.2238+0.18595
15.652+18.819+14.813+18.467+11.056+14.482+16.345+16.168+14.185+18.822
