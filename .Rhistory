cn <- tns[cidx.A, cidx.B]
add.args <- c(list(y=cy, n=cn, tys=tys, tns=tns, cidx.A=cidx.A, cidx.B=cidx.B, alp.prior=priors[cidx.A,cidx.B,1], bet.prior=priors[cidx.A,cidx.B,2]), add.args)
# quick escalation
# if (sum(tys)==0){
#   if (cidx.A == ndose.A & cidx.B != ndose.B){
#     cidx.B <- cidx.B +1
#   } else if (cidx.A != ndose.A & cidx.B == ndose.B){
#     cidx.A <- cidx.A +1
#   } else if (cidx.A != ndose.A & cidx.B != ndose.B){
#     rand <- rbinom(1,1,0.5)
#     if(rand == 0){
#       cidx.A <- cidx.A + 1
#     } else {
#       cidx.B <- cidx.B + 1
#     }
#   } else {
#     next
#   }
#   next
# }
# if (overdose.fn(phi, add.args)){
#   tover.doses[cidx.A:ndose.A, cidx.B:ndose.B] <- 1
# }
if (tover.doses[1,1] == 1){
earlystop <- 1
break()
}
if (cidx.A!=1 & cidx.B!=1 & cidx.A!=ndose.A & cidx.B!=ndose.B){
# no boundary
cys <- tys[(cidx.A-1):(cidx.A+1), (cidx.B-1):(cidx.B+1)]
cns <- tns[(cidx.A-1):(cidx.A+1), (cidx.B-1):(cidx.B+1)]
cover.doses <- tover.doses[(cidx.A-1):(cidx.A+1), (cidx.B-1):(cidx.B+1)]
} else if (cidx.A==1 & cidx.B==1){
# (1, 1)
cys <- rbind(c(NA,NA,NA),cbind(c(NA,NA),tys[1:2,1:2]))
cns <- rbind(c(NA,NA,NA),cbind(c(NA,NA),tns[1:2,1:2]))
cover.doses <- rbind(c(NA,NA,NA),cbind(c(NA,NA),tover.doses[1:2,1:2]))
} else if (cidx.A==ndose.A & cidx.B==ndose.B){
# (nA, nB)
cys <- rbind(cbind(tys[(cidx.A-1):cidx.A,(cidx.B-1):cidx.B],c(NA,NA)), c(NA,NA,NA))
cns <- rbind(cbind(tns[(cidx.A-1):cidx.A,(cidx.B-1):cidx.B],c(NA,NA)), c(NA,NA,NA))
cover.doses <- rbind(cbind(tover.doses[(cidx.A-1):cidx.A,(cidx.B-1):cidx.B],c(NA,NA)), c(NA,NA,NA))
} else if (cidx.A==1 & cidx.B==ndose.B){
# (1, nB)
cys <- rbind(c(NA,NA,NA),cbind(tys[1:2,(cidx.B-1):cidx.B],c(NA,NA)))
cns <- rbind(c(NA,NA,NA),cbind(tns[1:2,(cidx.B-1):cidx.B],c(NA,NA)))
cover.doses <- rbind(c(NA,NA,NA),cbind(tover.doses[1:2,(cidx.B-1):cidx.B],c(NA,NA)))
} else if (cidx.A==ndose.A & cidx.B==1){
# (nA, 1)
cys <- rbind(cbind(c(NA,NA), tys[(cidx.A-1):cidx.A,1:2]),c(NA,NA,NA))
cns <- rbind(cbind(c(NA,NA), tns[(cidx.A-1):cidx.A,1:2]),c(NA,NA,NA))
cover.doses <- rbind(cbind(c(NA,NA), tover.doses[(cidx.A-1):cidx.A,1:2]),c(NA,NA,NA))
} else if (cidx.A==1 & cidx.B!=1){
# (1, 2:(nB-1))
cys <- rbind(c(NA,NA,NA), tys[1:2, (cidx.B-1):(cidx.B+1)])
cns <- rbind(c(NA,NA,NA), tns[1:2, (cidx.B-1):(cidx.B+1)])
cover.doses <- rbind(c(NA,NA,NA), tover.doses[1:2, (cidx.B-1):(cidx.B+1)])
} else if (cidx.A!=1 & cidx.B==1){
# (2:(nA-1), 1)
cys <- cbind(c(NA,NA,NA), tys[(cidx.A-1):(cidx.A+1), 1:2])
cns <- cbind(c(NA,NA,NA), tns[(cidx.A-1):(cidx.A+1), 1:2])
cover.doses <- cbind(c(NA,NA,NA), tover.doses[(cidx.A-1):(cidx.A+1), 1:2])
} else if (cidx.A==ndose.A & cidx.B!=ndose.B){
# (nA, 2:(nB-1))
cys <- rbind(tys[(ndose.A-1):ndose.A, (cidx.B-1):(cidx.B+1)], c(NA,NA,NA))
cns <- rbind(tns[(ndose.A-1):ndose.A, (cidx.B-1):(cidx.B+1)], c(NA,NA,NA))
cover.doses <- rbind(tover.doses[(ndose.A-1):ndose.A, (cidx.B-1):(cidx.B+1)], c(NA,NA,NA))
} else if (cidx.A!=ndose.A & cidx.B==ndose.B){
# (2:(nA-1), nB)
cys <- cbind(tys[(cidx.A-1):(cidx.A+1), (cidx.B-1):cidx.B], c(NA,NA,NA))
cns <- cbind(tns[(cidx.A-1):(cidx.A+1), (cidx.B-1):cidx.B], c(NA,NA,NA))
cover.doses <- cbind(tover.doses[(cidx.A-1):(cidx.A+1), (cidx.B-1):cidx.B], c(NA,NA,NA))
} else {
message('no such case')
}
idx.chg <- make.decision.2dCFO.fn(phi, cys, cns, add.args$alp.prior, add.args$bet.prior, cover.doses)
cidx.A <- cidx.A + idx.chg[1]
cidx.B <- cidx.B + idx.chg[2]
}
if (earlystop==0){
MTD <- select.mtd.comb(phi, tns, tys)$MTD
}else{
MTD <- c(99,99)
}
correct <- 0
if(MTD[1]>ndose.A | MTD[2]>ndose.B){
correct <- 0
} else if (p.true[MTD[1],MTD[2]]==phi){
correct <- 1
}
npercent <- 0
for (j in 1:ndose.A) {
for (k in 1:ndose.B) {
if (p.true[j,k]==phi){
npercent <- npercent + tns[j,k]
}
}
}
npercent <- percent(npercent/(ncohort*cohortsize))
list(MTD=MTD, dose.ns=tns, DLT.ns=tys, p.true=p.true, target=phi, over.doses=tover.doses, correct=correct, npercent=npercent, ntox=sum(tys))
}
res <- CFO.simu.fn(target, p.true.1, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, n0=1, p.min=0.1, p.max=0.6, add.args=add.args, seed = 1)
res
priors <- set.priors(1,3,5,0.1,0.6)
priors
x <- matrix(0.1,3,3)
x
1-x
fix.priors <- function(n0, ndose.A, ndose.B, p.min, p.max){
priors <- array(0, dim = c(ndose.A,ndose.B,2))
p <- list()
p[[1]] <- c(0.02, 0.07, 0.10, 0.15, 0.30)
p[[2]] <- c(0.7, 0.10, 0.15, 0.30, 0.45)
p[[3]] <- c(0.10, 0.15, 0.30, 0.45, 0.55)
p.true <- rbind(p.trues.3[[1]],p.trues.3[[2]],p.trues.3[[3]])
for (j in 1:ndose.A){
for (k in 1:ndose.B){
priors[j,k,1] <- p.true[j,k,1]
priors[j,k,2] <- 1 - p.true[j,k,1]
}
}
return(priors)
}
source("C:/Users/User/Desktop/2D-CFO/2D_CFO_prior.R", echo=TRUE)
res <- CFO.simu.fn(target, p.true.3, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, n0=1, p.min=0.1, p.max=0.6, add.args=add.args, seed = 1)
fix.priors <- function(n0, ndose.A, ndose.B, p.min, p.max){
priors <- array(0, dim = c(ndose.A,ndose.B,2))
p <- list()
p[[1]] <- c(0.02, 0.07, 0.10, 0.15, 0.30)
p[[2]] <- c(0.7, 0.10, 0.15, 0.30, 0.45)
p[[3]] <- c(0.10, 0.15, 0.30, 0.45, 0.55)
p.true <- rbind(p.trues.3[[1]],p.trues.3[[2]],p.trues.3[[3]])
for (j in 1:ndose.A){
for (k in 1:ndose.B){
priors[j,k,1] <- p.true[j,k]
priors[j,k,2] <- 1 - p.true[j,k]
}
}
return(priors)
}
res <- CFO.simu.fn(target, p.true.3, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, n0=1, p.min=0.1, p.max=0.6, add.args=add.args, seed = 1)
make.decision.2dCFO.fn <- function(phi, cys, cns, alp.prior, bet.prior, cover.doses, diag=FALSE){
cidx.A <- 0
cidx.B <- 0
# horizontal direction
# message(paste('cys[2,]: ', cys[2,]))
# message(paste('cns[2,]: ', cns[2,]))
idx.chg.A <- make.decision.1dCFO.fn(phi, cys[2,], cns[2,], alp.prior, bet.prior, cover.doses[2,]) - 2
# message(paste('decision A: ',idx.chg.A))
# vertical direction
# message(paste('cys[,2]: ', cys[,2]))
# message(paste('cns[,2]: ', cns[,2]))
# message(paste('alp, bet: ', alp.prior, bet.prior))
# message(paste('cover.doses: ',cover.doses[,2]))
idx.chg.B <- make.decision.1dCFO.fn(phi, cys[,2], cns[,2], alp.prior, bet.prior, cover.doses[,2]) - 2
# message(paste('decision B: ',idx.chg.B))
if (idx.chg.A == 1 & idx.chg.B == 1){
### horizontal and vertical only
OR.R <- OR.values(phi, cys[2,2], cns[2,2], cys[2,3], cns[2,3], alp.prior, bet.prior, type="R")
OR.U <- OR.values(phi, cys[2,2], cns[2,2], cys[3,2], cns[3,2], alp.prior, bet.prior, type="R")
message('E,E')
message(paste('OR.R: ',OR.R))
message(paste('OR.U: ',OR.U))
if (OR.R == OR.U){
rand <- rbinom(1,1,0.5)
if(rand == 0){
cidx.A <- 1
} else {
cidx.B <- 1
}
} else if (OR.R > OR.U){
cidx.B <- 1
} else {
cidx.A <- 1
}
### diagonal direction
# cidx.A <- idx.chg.A
# cidx.B <- idx.chg.B
} else if (idx.chg.A == -1 & idx.chg.B == -1){
if (is.na(cys[2,1]) & is.na(cys[1,2])){
cidx.A <- 0
cidx.B <- 0
} else if (is.na(cys[2,1])){
cidx.A <- -1
} else if (is.na(cys[1,2])){
cidx.B <- -1
} else {
OR.L <- OR.values(phi, cys[2,2], cns[2,2], cys[2,1], cns[2,1], alp.prior, bet.prior, type="L")
OR.D <- OR.values(phi, cys[2,2], cns[2,2], cys[1,2], cns[1,2], alp.prior, bet.prior, type="L")
message('D,D')
message(paste('OR.L: ',OR.L))
message(paste('OR.D: ',OR.D))
if (OR.L == OR.D){
rand <- rbinom(1,1,0.5)
if(rand == 0){
cidx.A <- -1
} else {
cidx.B <- -1
}
} else if (OR.L > OR.D){
cidx.B <- -1
} else {
cidx.A <- -1
}
}
} else if (idx.chg.A == 1 & idx.chg.B == -1){
# message('rare case occurs')
DCR <- make.decision.1dCFO.fn(phi, c(cys[1,2],cys[2,2],cys[2,3]), c(cns[1,2],cns[2,2],cns[2,3]), alp.prior,
bet.prior, c(cover.doses[1,2],cover.doses[2,2],cover.doses[2,3])) - 2
if (DCR == 1){
cidx.B <- 1
} else if (DCR == -1){
cidx.A <- -1
}
} else if (idx.chg.A == -1 & idx.chg.B == 1){
# message('rare case occurs')
LCU <- make.decision.1dCFO.fn(phi, c(cys[2,1],cys[2,2],cys[3,2]), c(cns[2,1],cns[2,2],cns[3,2]), alp.prior,
bet.prior, c(cover.doses[2,1],cover.doses[2,2],cover.doses[3,2])) - 2
if (LCU == 1){
cidx.A <- 1
} else if (LCU == -1){
cidx.B <- -1
}
} else if (idx.chg.A == 1 & idx.chg.B == 0){
cidx.B <- 1
} else if (idx.chg.A == 0 & idx.chg.B == 1){
cidx.A <- 1
} else if (idx.chg.A == -1 & idx.chg.B == 0){
cidx.B <- -1
} else if (idx.chg.A == 0 & idx.chg.B == -1){
cidx.A <- -1
}
return (c(cidx.A, cidx.B))
}
res <- CFO.simu.fn(target, p.true.3, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, n0=1, p.min=0.1, p.max=0.6, add.args=add.args, seed = 1)
res
fix.priors(0, 0, 0, 0, 0)
fix.priors(0, 3, 5, 0, 0)
make.decision.2dCFO.fn <- function(phi, cys, cns, alp.prior, bet.prior, cover.doses, diag=FALSE){
cidx.A <- 0
cidx.B <- 0
# horizontal direction
# message(paste('cys[2,]: ', cys[2,]))
# message(paste('cns[2,]: ', cns[2,]))
idx.chg.A <- make.decision.1dCFO.fn(phi, cys[2,], cns[2,], alp.prior, bet.prior, cover.doses[2,]) - 2
# message(paste('decision A: ',idx.chg.A))
# vertical direction
# message(paste('cys[,2]: ', cys[,2]))
# message(paste('cns[,2]: ', cns[,2]))
# message(paste('alp, bet: ', alp.prior, bet.prior))
# message(paste('cover.doses: ',cover.doses[,2]))
idx.chg.B <- make.decision.1dCFO.fn(phi, cys[,2], cns[,2], alp.prior, bet.prior, cover.doses[,2]) - 2
# message(paste('decision B: ',idx.chg.B))
if (idx.chg.A == 1 & idx.chg.B == 1){
### horizontal and vertical only
OR.R <- OR.values(phi, cys[2,2], cns[2,2], cys[2,3], cns[2,3], alp.prior, bet.prior, type="R")
OR.U <- OR.values(phi, cys[2,2], cns[2,2], cys[3,2], cns[3,2], alp.prior, bet.prior, type="R")
message('E,E')
message('priors', alp.prior, bet.prior)
message(paste('OR.R: ',OR.R))
message(paste('OR.U: ',OR.U))
if (OR.R == OR.U){
rand <- rbinom(1,1,0.5)
if(rand == 0){
cidx.A <- 1
} else {
cidx.B <- 1
}
} else if (OR.R > OR.U){
cidx.B <- 1
} else {
cidx.A <- 1
}
### diagonal direction
# cidx.A <- idx.chg.A
# cidx.B <- idx.chg.B
} else if (idx.chg.A == -1 & idx.chg.B == -1){
if (is.na(cys[2,1]) & is.na(cys[1,2])){
cidx.A <- 0
cidx.B <- 0
} else if (is.na(cys[2,1])){
cidx.A <- -1
} else if (is.na(cys[1,2])){
cidx.B <- -1
} else {
OR.L <- OR.values(phi, cys[2,2], cns[2,2], cys[2,1], cns[2,1], alp.prior, bet.prior, type="L")
OR.D <- OR.values(phi, cys[2,2], cns[2,2], cys[1,2], cns[1,2], alp.prior, bet.prior, type="L")
message('D,D')
message(paste('OR.L: ',OR.L))
message(paste('OR.D: ',OR.D))
if (OR.L == OR.D){
rand <- rbinom(1,1,0.5)
if(rand == 0){
cidx.A <- -1
} else {
cidx.B <- -1
}
} else if (OR.L > OR.D){
cidx.B <- -1
} else {
cidx.A <- -1
}
}
} else if (idx.chg.A == 1 & idx.chg.B == -1){
# message('rare case occurs')
DCR <- make.decision.1dCFO.fn(phi, c(cys[1,2],cys[2,2],cys[2,3]), c(cns[1,2],cns[2,2],cns[2,3]), alp.prior,
bet.prior, c(cover.doses[1,2],cover.doses[2,2],cover.doses[2,3])) - 2
if (DCR == 1){
cidx.B <- 1
} else if (DCR == -1){
cidx.A <- -1
}
} else if (idx.chg.A == -1 & idx.chg.B == 1){
# message('rare case occurs')
LCU <- make.decision.1dCFO.fn(phi, c(cys[2,1],cys[2,2],cys[3,2]), c(cns[2,1],cns[2,2],cns[3,2]), alp.prior,
bet.prior, c(cover.doses[2,1],cover.doses[2,2],cover.doses[3,2])) - 2
if (LCU == 1){
cidx.A <- 1
} else if (LCU == -1){
cidx.B <- -1
}
} else if (idx.chg.A == 1 & idx.chg.B == 0){
cidx.B <- 1
} else if (idx.chg.A == 0 & idx.chg.B == 1){
cidx.A <- 1
} else if (idx.chg.A == -1 & idx.chg.B == 0){
cidx.B <- -1
} else if (idx.chg.A == 0 & idx.chg.B == -1){
cidx.A <- -1
}
return (c(cidx.A, cidx.B))
}
res <- CFO.simu.fn(target, p.true.3, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, n0=1, p.min=0.1, p.max=0.6, add.args=add.args, seed = 1)
res
x
priros
priors
priors[1:3,1:3]
priors[1:3,1:3,]
rbind(c(NA,NA,NA),cbind(c(NA,NA),priors[1:2,1:2,]))
abind(c(NA, NA), priors[1:2, 1:2, ])
library(abind)
install.packages('abind')
library(abind)
abind(c(NA, NA), priors[1:2, 1:2, ])
array(c(NA,NA),dim=(2,2,2))
array(c(NA,NA),dim=c(2,2,2))
abind(array(c(NA,NA),dim=c(2,2,2)), priors[1:2, 1:2, ])
a <- priors[,,1]
a
a[2,2]
source("C:/Users/User/Desktop/2D-CFO/2D_CFO_prior.R", echo=TRUE)
res <- CFO.simu.fn(target, p.true.3, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, n0=1, p.min=0.1, p.max=0.6, add.args=add.args, seed = 1)
source("C:/Users/User/Desktop/2D-CFO/2D_CFO_MTD.R", echo=TRUE)
res <- CFO.simu.fn(target, p.true.3, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, n0=1, p.min=0.1, p.max=0.6, add.args=add.args, seed = 1)
# Simulation function for CFO
CFO.simu.fn <- function(phi, p.true, ncohort=12, cohortsize=1, init.level.A=1, init.level.B=1, add.args=list(), seed=NULL){
# phi: Target DIL rate
# p.true: True DIL rates under the different dose levels
# ncohort: The number of cohorts
# cohortsize: The sample size in each cohort
# alp.prior, bet.prior: prior parameters
set.seed(seed)
earlystop <- 0
ndose.A <- length(p.true[,1])
ndose.B <- length(p.true[1,])
cidx.A <- init.level.A
cidx.B <- init.level.B
priors <- fix.priors(n0, ndose.A, ndose.B, p.min, p.max)
a.priors <- priors[,,1]
b.priors <- priors[,,2]
tys <- matrix(0, ndose.A, ndose.B) # number of responses for different doses.
tns <- matrix(0, ndose.A, ndose.B) # number of subject for different doses.
tover.doses <- matrix(0, ndose.A, ndose.B) # Whether each dose is overdosed or not, 1 yes
for (i in 1:ncohort){
message(paste(i, '-th step:'))
message(paste('cidx (A,B): (', cidx.A, ',', cidx.B, ')'))
pc <- p.true[cidx.A, cidx.B]
# sample from current dose
cres <- rbinom(cohortsize, 1, pc)
# update results
tys[cidx.A, cidx.B] <- tys[cidx.A, cidx.B] + sum(cres)
tns[cidx.A, cidx.B] <- tns[cidx.A, cidx.B] + cohortsize
cy <- tys[cidx.A, cidx.B]
cn <- tns[cidx.A, cidx.B]
add.args <- c(list(y=cy, n=cn, tys=tys, tns=tns, cidx.A=cidx.A, cidx.B=cidx.B, alp.prior=priors[cidx.A,cidx.B,1], bet.prior=priors[cidx.A,cidx.B,2]), add.args)
# quick escalation
# if (sum(tys)==0){
#   if (cidx.A == ndose.A & cidx.B != ndose.B){
#     cidx.B <- cidx.B +1
#   } else if (cidx.A != ndose.A & cidx.B == ndose.B){
#     cidx.A <- cidx.A +1
#   } else if (cidx.A != ndose.A & cidx.B != ndose.B){
#     rand <- rbinom(1,1,0.5)
#     if(rand == 0){
#       cidx.A <- cidx.A + 1
#     } else {
#       cidx.B <- cidx.B + 1
#     }
#   } else {
#     next
#   }
#   next
# }
# if (overdose.fn(phi, add.args)){
#   tover.doses[cidx.A:ndose.A, cidx.B:ndose.B] <- 1
# }
if (tover.doses[1,1] == 1){
earlystop <- 1
break()
}
if (cidx.A!=1 & cidx.B!=1 & cidx.A!=ndose.A & cidx.B!=ndose.B){
# no boundary
cys <- tys[(cidx.A-1):(cidx.A+1), (cidx.B-1):(cidx.B+1)]
cns <- tns[(cidx.A-1):(cidx.A+1), (cidx.B-1):(cidx.B+1)]
cap <- a.priors[(cidx.A-1):(cidx.A+1), (cidx.B-1):(cidx.B+1)]
cbp <- b.priors[(cidx.A-1):(cidx.A+1), (cidx.B-1):(cidx.B+1)]
cover.doses <- tover.doses[(cidx.A-1):(cidx.A+1), (cidx.B-1):(cidx.B+1)]
} else if (cidx.A==1 & cidx.B==1){
# (1, 1)
cys <- rbind(c(NA,NA,NA),cbind(c(NA,NA),tys[1:2,1:2]))
cns <- rbind(c(NA,NA,NA),cbind(c(NA,NA),tns[1:2,1:2]))
cap <- rbind(c(NA,NA,NA),cbind(c(NA,NA),a.priors[1:2,1:2]))
cbp <- rbind(c(NA,NA,NA),cbind(c(NA,NA),b.priors[1:2,1:2]))
cover.doses <- rbind(c(NA,NA,NA),cbind(c(NA,NA),tover.doses[1:2,1:2]))
} else if (cidx.A==ndose.A & cidx.B==ndose.B){
# (nA, nB)
cys <- rbind(cbind(tys[(cidx.A-1):cidx.A,(cidx.B-1):cidx.B],c(NA,NA)), c(NA,NA,NA))
cns <- rbind(cbind(tns[(cidx.A-1):cidx.A,(cidx.B-1):cidx.B],c(NA,NA)), c(NA,NA,NA))
cap <- rbind(cbind(a.priors[(cidx.A-1):cidx.A,(cidx.B-1):cidx.B],c(NA,NA)), c(NA,NA,NA))
cbp <- rbind(cbind(b.priors[(cidx.A-1):cidx.A,(cidx.B-1):cidx.B],c(NA,NA)), c(NA,NA,NA))
cover.doses <- rbind(cbind(tover.doses[(cidx.A-1):cidx.A,(cidx.B-1):cidx.B],c(NA,NA)), c(NA,NA,NA))
} else if (cidx.A==1 & cidx.B==ndose.B){
# (1, nB)
cys <- rbind(c(NA,NA,NA),cbind(tys[1:2,(cidx.B-1):cidx.B],c(NA,NA)))
cns <- rbind(c(NA,NA,NA),cbind(tns[1:2,(cidx.B-1):cidx.B],c(NA,NA)))
cap <- rbind(c(NA,NA,NA),cbind(a.priors[1:2,(cidx.B-1):cidx.B],c(NA,NA)))
cbp <- rbind(c(NA,NA,NA),cbind(b.priors[1:2,(cidx.B-1):cidx.B],c(NA,NA)))
cover.doses <- rbind(c(NA,NA,NA),cbind(tover.doses[1:2,(cidx.B-1):cidx.B],c(NA,NA)))
} else if (cidx.A==ndose.A & cidx.B==1){
# (nA, 1)
cys <- rbind(cbind(c(NA,NA), tys[(cidx.A-1):cidx.A,1:2]),c(NA,NA,NA))
cns <- rbind(cbind(c(NA,NA), tns[(cidx.A-1):cidx.A,1:2]),c(NA,NA,NA))
cap <- rbind(cbind(c(NA,NA), a.priors[(cidx.A-1):cidx.A,1:2]),c(NA,NA,NA))
cbp <- rbind(cbind(c(NA,NA), b.priors[(cidx.A-1):cidx.A,1:2]),c(NA,NA,NA))
cover.doses <- rbind(cbind(c(NA,NA), tover.doses[(cidx.A-1):cidx.A,1:2]),c(NA,NA,NA))
} else if (cidx.A==1 & cidx.B!=1){
# (1, 2:(nB-1))
cys <- rbind(c(NA,NA,NA), tys[1:2, (cidx.B-1):(cidx.B+1)])
cns <- rbind(c(NA,NA,NA), tns[1:2, (cidx.B-1):(cidx.B+1)])
cap <- rbind(c(NA,NA,NA), a.priors[1:2, (cidx.B-1):(cidx.B+1)])
cbp <- rbind(c(NA,NA,NA), b.priors[1:2, (cidx.B-1):(cidx.B+1)])
cover.doses <- rbind(c(NA,NA,NA), tover.doses[1:2, (cidx.B-1):(cidx.B+1)])
} else if (cidx.A!=1 & cidx.B==1){
# (2:(nA-1), 1)
cys <- cbind(c(NA,NA,NA), tys[(cidx.A-1):(cidx.A+1), 1:2])
cns <- cbind(c(NA,NA,NA), tns[(cidx.A-1):(cidx.A+1), 1:2])
cap <- cbind(c(NA,NA,NA), a.priors[(cidx.A-1):(cidx.A+1), 1:2])
cbp <- cbind(c(NA,NA,NA), b.priors[(cidx.A-1):(cidx.A+1), 1:2])
cover.doses <- cbind(c(NA,NA,NA), tover.doses[(cidx.A-1):(cidx.A+1), 1:2])
} else if (cidx.A==ndose.A & cidx.B!=ndose.B){
# (nA, 2:(nB-1))
cys <- rbind(tys[(ndose.A-1):ndose.A, (cidx.B-1):(cidx.B+1)], c(NA,NA,NA))
cns <- rbind(tns[(ndose.A-1):ndose.A, (cidx.B-1):(cidx.B+1)], c(NA,NA,NA))
cap <- rbind(a.priors[(ndose.A-1):ndose.A, (cidx.B-1):(cidx.B+1)], c(NA,NA,NA))
cbp <- rbind(b.priors[(ndose.A-1):ndose.A, (cidx.B-1):(cidx.B+1)], c(NA,NA,NA))
cover.doses <- rbind(tover.doses[(ndose.A-1):ndose.A, (cidx.B-1):(cidx.B+1)], c(NA,NA,NA))
} else if (cidx.A!=ndose.A & cidx.B==ndose.B){
# (2:(nA-1), nB)
cys <- cbind(tys[(cidx.A-1):(cidx.A+1), (cidx.B-1):cidx.B], c(NA,NA,NA))
cns <- cbind(tns[(cidx.A-1):(cidx.A+1), (cidx.B-1):cidx.B], c(NA,NA,NA))
cap <- cbind(a.priors[(cidx.A-1):(cidx.A+1), (cidx.B-1):cidx.B], c(NA,NA,NA))
cbp <- cbind(b.priors[(cidx.A-1):(cidx.A+1), (cidx.B-1):cidx.B], c(NA,NA,NA))
cover.doses <- cbind(tover.doses[(cidx.A-1):(cidx.A+1), (cidx.B-1):cidx.B], c(NA,NA,NA))
} else {
message('no such case')
}
idx.chg <- make.decision.2dCFO.fn(cidx.A, cidx.B, phi, cys, cns, cap, cbp, cover.doses)
cidx.A <- cidx.A + idx.chg[1]
cidx.B <- cidx.B + idx.chg[2]
}
if (earlystop==0){
MTD <- select.mtd.comb(phi, tns, tys)$MTD
}else{
MTD <- c(99,99)
}
correct <- 0
if(MTD[1]>ndose.A | MTD[2]>ndose.B){
correct <- 0
} else if (p.true[MTD[1],MTD[2]]==phi){
correct <- 1
}
npercent <- 0
for (j in 1:ndose.A) {
for (k in 1:ndose.B) {
if (p.true[j,k]==phi){
npercent <- npercent + tns[j,k]
}
}
}
npercent <- percent(npercent/(ncohort*cohortsize))
list(MTD=MTD, dose.ns=tns, DLT.ns=tys, p.true=p.true, target=phi, over.doses=tover.doses, correct=correct, npercent=npercent, ntox=sum(tys))
}
res <- CFO.simu.fn(target, p.true.3, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args, seed = 1)
res <- CFO.simu.fn(target, p.true.3, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args, seed = 1)
source("C:/Users/User/Desktop/2D-CFO/2D_CFO_prior.R", echo=TRUE)
res <- CFO.simu.fn(target, p.true.3, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args, seed = 1)
source("C:/Users/User/Desktop/2D-CFO/2D_CFO_prior.R", echo=TRUE)
res <- CFO.simu.fn(target, p.true.3, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args, seed = 1)
source("C:/Users/User/Desktop/2D-CFO/2D_CFO_prior.R", echo=TRUE)
res <- CFO.simu.fn(target, p.true.3, ncohort=ncohort, cohortsize=cohortsize, init.level.A, init.level.B, add.args=add.args, seed = 1)
res
