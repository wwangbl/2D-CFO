set.seed(792)
y <- combos <- c()
correct <- npercent <- ntox <- 0
for (x in x0) {
combos <- c(combos, rep(x,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[x]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
if(sum(y)>0){
break
}
}
if(sum(y)==0){
message('no MTD is selected')
return(list(correct=0, npercent=0, ntox=0))
}
while (length(y)<n) {
idx <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
combos <- c(combos, rep(idx,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[idx]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
}
set.seed(792)
y <- combos <- c()
correct <- npercent <- ntox <- 0
for (x in x0) {
combos <- c(combos, rep(x,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[x]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
if(sum(y)>0){
break
}
}
if(sum(y)==0){
message('no MTD is selected')
return(list(correct=0, npercent=0, ntox=0))
}
data<-as.matrix(table(combos,y))
# while (length(y)<n) {
#   idx <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
#   combos <- c(combos, rep(idx,3))
#   for (i in 1:3) {
#     p<-runif(1)
#     if (p<=r[idx]){
#       y <- c(y,1)
#     } else {
#       y <- c(y,0)
#     }
#   }
# }
data
y
all(y==1)
pocrm.sim <- function(r,alpha,prior.o,x0,n,theta,seed){
set.seed(seed)
y <- combos <- c()
correct <- npercent <- ntox <- 0
for (x in x0) {
combos <- c(combos, rep(x,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[x]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
if(sum(y)>0){
break
}
if(all(y==1)){
while (sum(y)==length(y)) {
combos <- c(combos, rep(x,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[x]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
}
}
}
if(sum(y)==0){
message('no MTD is selected')
return(list(correct=0, npercent=0, ntox=0))
}
while (length(y)<n) {
idx <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
combos <- c(combos, rep(idx,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[idx]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
}
MTD <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
ntox <- sum(y)
if(r[MTD]==theta){
correct <- 1
}
for (i in 1:length(r)) {
if(r[i]==theta){
npercent <- npercent + length(which(combos==i))
}
}
npercent <- npercent/n
list(correct=correct, npercent=npercent, ntox=ntox)
}
set.seed(792)
y <- combos <- c()
correct <- npercent <- ntox <- 0
for (x in x0) {
combos <- c(combos, rep(x,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[x]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
if(sum(y)>0){
break
}
}
if(sum(y)==0){
message('no MTD is selected')
return(list(correct=0, npercent=0, ntox=0))
}
data<-as.matrix(table(combos,y))
while (length(y)<n) {
idx <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
combos <- c(combos, rep(idx,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[idx]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
}
y
pocrm.sim <- function(r,alpha,prior.o,x0,n,theta,seed){
set.seed(seed)
y <- combos <- c()
correct <- npercent <- ntox <- 0
for (x in x0) {
combos <- c(combos, rep(x,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[x]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
if(all(y==1)){
while (sum(y)==length(y)) {
combos <- c(combos, rep(x,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[x]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
}
}
if(sum(y)>0){
break
}
}
if(sum(y)==0){
message('no MTD is selected')
return(list(correct=0, npercent=0, ntox=0))
}
while (length(y)<n) {
idx <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
combos <- c(combos, rep(idx,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[idx]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
}
MTD <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
ntox <- sum(y)
if(r[MTD]==theta){
correct <- 1
}
for (i in 1:length(r)) {
if(r[i]==theta){
npercent <- npercent + length(which(combos==i))
}
}
npercent <- npercent/n
list(correct=correct, npercent=npercent, ntox=ntox)
}
set.seed(792)
y <- combos <- c()
correct <- npercent <- ntox <- 0
for (x in x0) {
combos <- c(combos, rep(x,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[x]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
if(sum(y)>0){
break
}
}
if(sum(y)==0){
message('no MTD is selected')
return(list(correct=0, npercent=0, ntox=0))
}
data<-as.matrix(table(combos,y))
while (length(y)<n) {
idx <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
combos <- c(combos, rep(idx,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[idx]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
}
y
pocrm.sim <- function(r,alpha,prior.o,x0,n,theta,seed){
set.seed(seed)
y <- combos <- c()
correct <- npercent <- ntox <- 0
for (x in x0) {
combos <- c(combos, rep(x,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[x]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
if(all(y==1)){
while (sum(y)==length(y)) {
message('here')
combos <- c(combos, rep(x,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[x]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
}
}
if(sum(y)>0){
break
}
}
if(sum(y)==0){
message('no MTD is selected')
return(list(correct=0, npercent=0, ntox=0))
}
while (length(y)<n) {
idx <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
combos <- c(combos, rep(idx,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[idx]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
}
MTD <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
ntox <- sum(y)
if(r[MTD]==theta){
correct <- 1
}
for (i in 1:length(r)) {
if(r[i]==theta){
npercent <- npercent + length(which(combos==i))
}
}
npercent <- npercent/n
list(correct=correct, npercent=npercent, ntox=ntox)
}
set.seed(792)
y <- combos <- c()
correct <- npercent <- ntox <- 0
for (x in x0) {
combos <- c(combos, rep(x,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[x]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
if(sum(y)>0){
break
}
}
if(sum(y)==0){
message('no MTD is selected')
return(list(correct=0, npercent=0, ntox=0))
}
data<-as.matrix(table(combos,y))
while (length(y)<n) {
idx <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
combos <- c(combos, rep(idx,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[idx]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
}
#All specifications refer to example in Wages, Conaway and O'Quigley (2011a).
#True toxicity rates of Scenario 1 in Table 4.
r<-c(p.true.1)
#Specifiy the possible orderings from Section 3.3.
orders<-matrix(nrow=6,ncol=15)
orders[1,]<-c(1,4,7,10,13,2,5,8,11,14,3,6,9,12,15)
orders[2,]<-c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
orders[3,]<-c(1,2,4,3,5,7,6,8,10,9,11,13,12,14,15)
orders[4,]<-c(1,4,2,7,5,3,10,8,6,13,11,9,14,12,15)
orders[5,]<-c(1,2,4,7,5,3,6,8,10,13,11,9,12,14,15)
orders[6,]<-c(1,4,2,3,5,7,10,8,6,9,11,13,14,12,15)
#Specify the skeleton values.
skeleton<-getprior(0.03,0.30,13,15)
#Initial guesses of toxicity probabilities for each ordering.
alpha<-getwm(orders,skeleton)
#We consider all orders to be equally likely prior to the study.
prior.o<-rep(1/6,3)
#Initial escalation in Stage 1 proceeds according to the zones in Figure 1.
#Single patient cohorts are used.
x0<-c(1,2,4,3,5,7,6,8,10,9,11,13,12,14,15)
#Number of patients used to define stopping rule
stop<-61
#Maximum sample size.
n<-60
#The target toxicity rate
theta<-0.30
#Definition of acceptable DLT rates
tox.range<-0.05
fit <- pocrm.sim(r, alpha, prior.o, x0, n, theta, seed=792)
fit
#All specifications refer to example in Wages, Conaway and O'Quigley (2011a).
#True toxicity rates of Scenario 1 in Table 4.
r<-c(p.true.5)
#Specifiy the possible orderings from Section 3.3.
orders<-matrix(nrow=6,ncol=15)
orders[1,]<-c(1,4,7,10,13,2,5,8,11,14,3,6,9,12,15)
orders[2,]<-c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
orders[3,]<-c(1,2,4,3,5,7,6,8,10,9,11,13,12,14,15)
orders[4,]<-c(1,4,2,7,5,3,10,8,6,13,11,9,14,12,15)
orders[5,]<-c(1,2,4,7,5,3,6,8,10,13,11,9,12,14,15)
orders[6,]<-c(1,4,2,3,5,7,10,8,6,9,11,13,14,12,15)
#Specify the skeleton values.
skeleton<-getprior(0.03,0.30,13,15)
#Initial guesses of toxicity probabilities for each ordering.
alpha<-getwm(orders,skeleton)
#We consider all orders to be equally likely prior to the study.
prior.o<-rep(1/6,3)
#Initial escalation in Stage 1 proceeds according to the zones in Figure 1.
#Single patient cohorts are used.
x0<-c(1,2,4,3,5,7,6,8,10,9,11,13,12,14,15)
#Number of patients used to define stopping rule
stop<-61
#Maximum sample size.
n<-60
#The target toxicity rate
theta<-0.30
#Definition of acceptable DLT rates
tox.range<-0.05
fit <- pocrm.sim(r, alpha, prior.o, x0, n, theta, seed=796)
fit
#All specifications refer to example in Wages, Conaway and O'Quigley (2011a).
#True toxicity rates of Scenario 1 in Table 4.
r<-c(p.true.5)
#Specifiy the possible orderings from Section 3.3.
orders<-matrix(nrow=6,ncol=15)
orders[1,]<-c(1,4,7,10,13,2,5,8,11,14,3,6,9,12,15)
orders[2,]<-c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
orders[3,]<-c(1,2,4,3,5,7,6,8,10,9,11,13,12,14,15)
orders[4,]<-c(1,4,2,7,5,3,10,8,6,13,11,9,14,12,15)
orders[5,]<-c(1,2,4,7,5,3,6,8,10,13,11,9,12,14,15)
orders[6,]<-c(1,4,2,3,5,7,10,8,6,9,11,13,14,12,15)
#Specify the skeleton values.
skeleton<-getprior(0.03,0.30,13,15)
#Initial guesses of toxicity probabilities for each ordering.
alpha<-getwm(orders,skeleton)
#We consider all orders to be equally likely prior to the study.
prior.o<-rep(1/6,3)
#Initial escalation in Stage 1 proceeds according to the zones in Figure 1.
#Single patient cohorts are used.
x0<-c(1,2,4,3,5,7,6,8,10,9,11,13,12,14,15)
#Number of patients used to define stopping rule
stop<-61
#Maximum sample size.
n<-60
#The target toxicity rate
theta<-0.30
#Definition of acceptable DLT rates
tox.range<-0.05
fit <- pocrm.sim(r, alpha, prior.o, x0, n, theta, seed=797)
fit
#All specifications refer to example in Wages, Conaway and O'Quigley (2011a).
#True toxicity rates of Scenario 1 in Table 4.
r<-c(p.true.5)
#Specifiy the possible orderings from Section 3.3.
orders<-matrix(nrow=6,ncol=15)
orders[1,]<-c(1,4,7,10,13,2,5,8,11,14,3,6,9,12,15)
orders[2,]<-c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
orders[3,]<-c(1,2,4,3,5,7,6,8,10,9,11,13,12,14,15)
orders[4,]<-c(1,4,2,7,5,3,10,8,6,13,11,9,14,12,15)
orders[5,]<-c(1,2,4,7,5,3,6,8,10,13,11,9,12,14,15)
orders[6,]<-c(1,4,2,3,5,7,10,8,6,9,11,13,14,12,15)
#Specify the skeleton values.
skeleton<-getprior(0.03,0.30,13,15)
#Initial guesses of toxicity probabilities for each ordering.
alpha<-getwm(orders,skeleton)
#We consider all orders to be equally likely prior to the study.
prior.o<-rep(1/6,3)
#Initial escalation in Stage 1 proceeds according to the zones in Figure 1.
#Single patient cohorts are used.
x0<-c(1,2,4,3,5,7,6,8,10,9,11,13,12,14,15)
#Number of patients used to define stopping rule
stop<-61
#Maximum sample size.
n<-60
#The target toxicity rate
theta<-0.30
#Definition of acceptable DLT rates
tox.range<-0.05
fit <- pocrm.sim(r, alpha, prior.o, x0, n, theta, seed=796)
fit
set.seed(796)
y <- combos <- c()
correct <- npercent <- ntox <- 0
for (x in x0) {
combos <- c(combos, rep(x,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[x]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
if(sum(y)>0){
break
}
}
if(sum(y)==0){
message('no MTD is selected')
return(list(correct=0, npercent=0, ntox=0))
}
data<-as.matrix(table(combos,y))
while (length(y)<n) {
idx <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
combos <- c(combos, rep(idx,3))
for (i in 1:3) {
p<-runif(1)
if (p<=r[idx]){
y <- c(y,1)
} else {
y <- c(y,0)
}
}
}
y
MTD <- pocrm.imp(alpha,prior.o,theta,y,combos)$dose.rec
MTD
